{"version":3,"file":"static/js/935.ac295876.chunk.js","mappings":"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","sources":["webpack://iotum-samples/./src/navigation/MenuButton/MenuButton.module.css?3f77","navigation/MenuButton/MenuButton.js","webpack://iotum-samples/./src/pages/popout-chat/submitForm.module.css?9556","pages/popout-chat/App.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"menuButton\":\"MenuButton_menuButton__e9oFw\",\"left\":\"MenuButton_left__d8Tih\",\"right\":\"MenuButton_right__fbjxn\"};","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './MenuButton.module.css'; \r\n\r\nfunction MenuButton({ position = 'left' }) { // 'left' is default if no position is provided\r\n  const navigate = useNavigate();\r\n  \r\n  const handleClick = () => {\r\n    console.log('Menu Button Clicked, Go To the Menu Page.');\r\n    navigate('/iotum-samples/menu');\r\n  };\r\n\r\n  // Determine the button position class\r\n  const positionClass = position === 'right' ? styles.right : styles.left;\r\n\r\n  return (\r\n    <div>\r\n      <button className={`${styles.menuButton} ${positionClass}`} onClick={handleClick}>\r\n        Menu Page\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"chatContainer\":\"submitForm_chatContainer__Xcj9R\",\"badge\":\"submitForm_badge__coYDH\",\"biggerButton\":\"submitForm_biggerButton__hfy-z\"};","import React, { useState, useRef, useEffect } from 'react';\nimport styles from './submitForm.module.css';\nimport TokenButton from '../../navigation/TokenButton/TokenButton';\nimport MenuButton from '../../navigation/MenuButton/MenuButton';\nimport * as Callbridge from '@iotum/callbridge-js';\nimport { useSelector } from 'react-redux';\nimport useGuardedRoute from '../../components/hooks/useGuardedRoute';\n\nconst App = () => {\n  useGuardedRoute(); // Guard the route\n  const [unreadMessages, setUnreadMessages] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  /** @type {React.MutableRefObject<Callbridge.Dashboard>} */\n  const widget = useRef(null);\n\n  const credentials = useSelector(state => state.credentials);\n\n  // Check if all necessary credentials are available\n  const areCredentialsValid = credentials.token && credentials.domain && credentials.hostId;\n\n  const renderChatWidget = (onReady) => {\n    if (areCredentialsValid) {\n      if (widget.current?.instance) {\n        widget.current.instance.focus();\n        onReady();\n      } else {\n        const { domain, token, hostId } = credentials;\n        widget.current = new Callbridge.Dashboard({\n          domain,\n          sso: { token, hostId },\n          container: window,\n          target: {\n            name: \"CallbridgeChatWidget\",\n            features: \"width=800,height=600\",\n            checkExisting: true,\n          }\n        }, Callbridge.Service.Team);\n\n        widget.current.on('dashboard.READY', onReady);\n        widget.current.on('dashboard.NAVIGATE', (data) => {\n          console.log(\"navigate event\");\n        });\n      }\n    }\n  };\n\n  /** @type {React.MouseEventHandler<HTMLButtonElement>} */\n  const onClick = (ev) => {\n    ev.preventDefault();\n    const { currentTarget: button } = ev;\n\n    button.disabled = true;\n\n    const timer = setTimeout(() => (button.disabled = false), 2e3);\n    renderChatWidget(() => {\n      clearTimeout(timer);\n      button.disabled = false;\n    });\n  };\n\n  useEffect(() => {\n    if (areCredentialsValid) {\n      // The container is not in DOM\n      const hiddenContainer = document.createElement('div');\n\n      const { domain, token, hostId } = credentials;\n      const invisibleWidget = new Callbridge.Dashboard({\n        domain,\n        sso: { token, hostId },\n        container: hiddenContainer\n      }, Callbridge.Service.Team);\n\n      invisibleWidget.on('dashboard.UNREAD_MESSAGES', (data) => {\n        const sum = Object.values(data.rooms).reduce((m, n) => m + n, 0);\n        setUnreadMessages(sum);\n        setIsLoading(false);\n      });\n\n      return () => {\n        widget.current?.unload();\n        invisibleWidget?.unload();\n      };\n    }\n  }, [areCredentialsValid, credentials]);\n\n  return (\n    <>\n      <TokenButton position='right' />\n      <MenuButton position=\"right\" />\n      <div className={styles.chatContainer}>\n        {isLoading ? (\n          <div>Loading unread messages...</div>\n        ) : (\n          <>\n            <button type=\"button\" className={styles.biggerButton} onClick={onClick}>\n              Chat\n            </button>\n            <span className={styles.badge}>{unreadMessages}</span>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"names":["_ref","_ref$position","position","navigate","useNavigate","positionClass","styles","_jsx","children","className","concat","onClick","console","log","useGuardedRoute","_useState","useState","_useState2","_slicedToArray","unreadMessages","setUnreadMessages","_useState3","_useState4","isLoading","setIsLoading","widget","useRef","credentials","useSelector","state","areCredentialsValid","token","domain","hostId","useEffect","hiddenContainer","document","createElement","invisibleWidget","Callbridge","sso","container","Team","on","data","sum","Object","values","rooms","reduce","m","n","_widget$current2","current","unload","_jsxs","_Fragment","TokenButton","MenuButton","type","ev","preventDefault","button","currentTarget","disabled","timer","setTimeout","onReady","_widget$current","instance","focus","window","target","name","features","checkExisting","renderChatWidget","clearTimeout"],"sourceRoot":""}