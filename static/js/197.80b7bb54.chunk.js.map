{"version":3,"file":"static/js/197.80b7bb54.chunk.js","mappings":"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","sources":["webpack://iotum-samples/./src/navigation/MenuButton/MenuButton.module.css?3f77","navigation/MenuButton/MenuButton.js","webpack://iotum-samples/./src/pages/tabbed-dashboard/submitForm.module.css?8a8c","pages/tabbed-dashboard/App.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"menuButton\":\"MenuButton_menuButton__e9oFw\",\"left\":\"MenuButton_left__d8Tih\",\"right\":\"MenuButton_right__fbjxn\"};","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './MenuButton.module.css'; \r\n\r\nfunction MenuButton({ position = 'left' }) { // 'left' is default if no position is provided\r\n  const navigate = useNavigate();\r\n  \r\n  const handleClick = () => {\r\n    console.log('Menu Button Clicked, Go To the Menu Page.');\r\n    navigate('/menu');\r\n  };\r\n\r\n  // Determine the button position class\r\n  const positionClass = position === 'right' ? styles.right : styles.left;\r\n\r\n  return (\r\n    <div>\r\n      <button className={`${styles.menuButton} ${positionClass}`} onClick={handleClick}>\r\n        Menu Page\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form-wrapper\":\"submitForm_form-wrapper__I2O9k\",\"appContainer\":\"submitForm_appContainer__B1dgt\",\"verticalTabContainer\":\"submitForm_verticalTabContainer__riwi2\",\"widgetContainer\":\"submitForm_widgetContainer__Vm7kt\",\"badge\":\"submitForm_badge__llHLA\"};","import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport styles from './submitForm.module.css';\nimport TokenButton from '../../navigation/TokenButton/TokenButton';\nimport MenuButton from '../../navigation/MenuButton/MenuButton';\nimport * as Callbridge from '@iotum/callbridge-js';\nimport { useSelector } from 'react-redux';\n\nconst App = () => {\n  const [isYourAppVisible, setIsYourAppVisible] = useState(true);\n  const [unreadMessages, setUnreadMessages] = useState(0);\n  const [isWidgetInitialized, setIsWidgetInitialized] = useState(false);\n  const [chatWidgetReady, setChatWidgetReady] = useState(false);\n\n  const containerRef = useRef(null);\n  const chatWidgetRef = useRef(null);\n  const widgetRef = useRef(null);\n\n  const credentials = useSelector(state => state.credentials);\n\n  const unloadWidgets = () => {\n    if (widgetRef.current) {\n      widgetRef.current.toggle(false);\n    }\n    if (chatWidgetRef.current) {\n      chatWidgetRef.current.toggle(false);\n    }\n  };\n\n  const renderWidget = useCallback(() => {\n    widgetRef.current = new Callbridge.Dashboard({\n      domain: credentials.domain,\n      sso: {\n        token: credentials.token,\n        hostId: credentials.hostId,\n      },\n      container: containerRef.current,\n    });\n\n    widgetRef.current.toggle(false);\n\n    widgetRef.current.on('dashboard.READY', () => {\n      chatWidgetRef.current = new Callbridge.Dashboard({\n        domain: 'iotum.callbridge.rocks',\n        container: containerRef.current,\n      }, \"Team\");\n\n      chatWidgetRef.current.toggle(false);\n\n      chatWidgetRef.current.on('dashboard.UNREAD_MESSAGES', (data) => {\n        const totalUnread = Object.values(data.rooms).reduce((total, count) => total + count, 0);\n        setUnreadMessages(totalUnread);\n      });\n\n      chatWidgetRef.current.on('dashboard.READY', () => {\n        setChatWidgetReady(true);\n        setIsWidgetInitialized(true);\n      });\n    });\n  }, [credentials]);\n\n  useEffect(() => {\n    if (isWidgetInitialized) {\n      chatWidgetRef.current.on('dashboard.NAVIGATE', (data) => {\n        const room = data.pathname !== '/' ? data.pathname : \"an unspecified room\";\n        console.log(`The chat widget navigated to this room: ${room}`);\n      });\n    }\n  }, [isWidgetInitialized]);\n\n  useEffect(() => {\n    renderWidget();\n\n    return () => {\n      unloadWidgets();\n      console.log('Widget unloaded')\n    }\n\n  }, [credentials, renderWidget]);\n\n  const loadWidget = (service) => {\n    unloadWidgets(); // Unload any currently displayed widgets\n\n    if(service === \"\") {\n      setIsYourAppVisible(true);\n      console.log(\"Load your app\");\n    } else if (service === \"Team\") {\n      chatWidgetRef.current.toggle(true);\n      setIsYourAppVisible(false);\n      console.log(\"Load the team chat widget\");\n    } else {\n      widgetRef.current.toggle(true);\n      widgetRef.current.load(service);\n      setIsYourAppVisible(false);\n      console.log(\"Load the \" + service +  \" widget\");\n    }\n  }\n\n  return (\n    <div className={styles.appContainer}>\n      <div className={styles.verticalTabContainer}>\n        <button onClick={() => loadWidget('')} disabled={!chatWidgetReady}>\n          Your App\n        </button>\n        <button\n          onClick={() => loadWidget('Team')}\n          disabled={!chatWidgetReady}\n          style={{ position: 'relative' }}\n        >\n          Team Chat\n          {unreadMessages > 0 && <span className={styles.badge}>{unreadMessages}</span>}\n        </button>\n        <button onClick={() => loadWidget('Drive')} disabled={!chatWidgetReady}>\n          Drive\n        </button>\n        <button onClick={() => loadWidget('Contacts')} disabled={!chatWidgetReady}>\n          Contacts\n        </button>\n      </div>\n      {isYourAppVisible && <div>Your app goes here</div>}\n      {!chatWidgetReady && <div>The widgets are loading</div>}\n      <div ref={containerRef} className={styles.widgetContainer}></div>\n      <TokenButton position='right' />\n      <MenuButton position=\"right\" />\n    </div>\n  );\n}\n\nexport default App;\n"],"names":["_ref","_ref$position","position","navigate","useNavigate","positionClass","styles","_jsx","children","className","concat","onClick","console","log","_useState","useState","_useState2","_slicedToArray","isYourAppVisible","setIsYourAppVisible","_useState3","_useState4","unreadMessages","setUnreadMessages","_useState5","_useState6","isWidgetInitialized","setIsWidgetInitialized","_useState7","_useState8","chatWidgetReady","setChatWidgetReady","containerRef","useRef","chatWidgetRef","widgetRef","credentials","useSelector","state","unloadWidgets","current","toggle","renderWidget","useCallback","Callbridge","domain","sso","token","hostId","container","on","data","totalUnread","Object","values","rooms","reduce","total","count","useEffect","room","pathname","loadWidget","service","load","_jsxs","disabled","style","ref","TokenButton","MenuButton"],"sourceRoot":""}